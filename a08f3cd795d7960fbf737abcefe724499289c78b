{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6786800b_553447dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-09T19:03:07Z",
      "side": 1,
      "message": "can you add the new properties/interfaces to the commit message?  like with the output of busctl introspect.",
      "revId": "a08f3cd795d7960fbf737abcefe724499289c78b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2906052c_88826f16",
        "filename": "occ_status.cpp",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-09T18:59:51Z",
      "side": 1,
      "message": "there\u0027s also a std::bitset class that lets one do all the set/clear/check stuff if you wanted, like\n\nif (newReason.test(something)\n  reason.clear(something)\n  \n if (reason.count())\n  std::cout \u003c\u003c reason.to_ulong()",
      "revId": "a08f3cd795d7960fbf737abcefe724499289c78b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a9fa912_c1add26c",
        "filename": "occ_status.cpp",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-09T18:59:51Z",
      "side": 1,
      "message": "so it would be  OCC0/power_managed_by.  Could this be backwards?\n\n  There\u0027s some wording in https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/requirements.md#directed-associations-should-be-named-with-participle-verbs\n\n\n    The {primary element} is {primary association} the {secondary element}.\n    The {secondary element} is {secondary association} the {primary element}.",
      "range": {
        "startLine": 644,
        "startChar": 28,
        "endLine": 644,
        "endChar": 57
      },
      "revId": "a08f3cd795d7960fbf737abcefe724499289c78b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39677075_1ca9bf35",
        "filename": "occ_status.hpp",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-09T18:59:51Z",
      "side": 1,
      "message": "if (!procPath.empty())  is preferred for this",
      "range": {
        "startLine": 252,
        "startChar": 12,
        "endLine": 252,
        "endChar": 32
      },
      "revId": "a08f3cd795d7960fbf737abcefe724499289c78b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97db1c51_a50c5440",
        "filename": "occ_status.hpp",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-09T18:59:51Z",
      "side": 1,
      "message": "nit: this is already what the unique_ptr constructor does.",
      "range": {
        "startLine": 400,
        "startChar": 53,
        "endLine": 400,
        "endChar": 63
      },
      "revId": "a08f3cd795d7960fbf737abcefe724499289c78b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}