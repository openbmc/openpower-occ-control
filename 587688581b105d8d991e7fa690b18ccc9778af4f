{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "512e8a53_ffd42ae4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2022-04-20T23:01:42Z",
      "side": 1,
      "message": "Did partial cleanup but also left some debug traces until all testing complete.\nLooking for preliminary review from Eddie and Matt.",
      "revId": "587688581b105d8d991e7fa690b18ccc9778af4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59af35dc_c4170822",
        "filename": "occ_manager.cpp",
        "patchSetId": 8
      },
      "lineNbr": 165,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-04-21T14:52:48Z",
      "side": 1,
      "message": "just fyi for the future, there\u0027s an std::optional for cases like this, where it can either hold a value or be empty, and  has a bool operator to say if it holds something, like\n\noptional\u003cbool\u003e isActive \u003d checkActive...\nif (isActive)  //or if (isActive.has_value())\n   if (*isActive) //or isActive.value()\n\nhaving said all that maybe this function can now return void anyway? (I had another comment at the function)",
      "range": {
        "startLine": 165,
        "startChar": 11,
        "endLine": 165,
        "endChar": 28
      },
      "revId": "587688581b105d8d991e7fa690b18ccc9778af4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a97b4264_76330d84",
        "filename": "pldm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 766,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-04-21T14:52:48Z",
      "side": 1,
      "message": "since this is now async it can now never return true I guess and could be void?",
      "revId": "587688581b105d8d991e7fa690b18ccc9778af4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "218df8c4_9c3b6b34",
        "filename": "utils.cpp",
        "patchSetId": 8
      },
      "lineNbr": 190,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-04-21T14:52:48Z",
      "side": 1,
      "message": "better to pass as either const std::string\u0026  or std::string_view  so it doesn\u0027t copy the whole string",
      "range": {
        "startLine": 190,
        "startChar": 26,
        "endLine": 190,
        "endChar": 38
      },
      "revId": "587688581b105d8d991e7fa690b18ccc9778af4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db5225d_ae6af6fa",
        "filename": "utils.cpp",
        "patchSetId": 8
      },
      "lineNbr": 212,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-04-21T14:52:48Z",
      "side": 1,
      "message": "this only needs to hold the string since that\u0027s all you\u0027re reading",
      "range": {
        "startLine": 212,
        "startChar": 12,
        "endLine": 212,
        "endChar": 25
      },
      "revId": "587688581b105d8d991e7fa690b18ccc9778af4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}